import andromeda/companies

use Andromeda\SpaceShip\(Ship, Engine)

## The Car service
@ship.destroyer: Ship(@engine.hyperdrive, @engine.pulsedrive)
 - producer: @producer.massive

##Â The Engine (the '?' marks the service as NOT shared)
@engine.hyperdrive?: Engine
 - setPower(34000)
 = tag: "james" 

@engine.pulsedrive?: Engine
 - setPower(20)

# Producer
:producer.default_name: 'Massive Industries'
@producer.massive: \Andromeda\Companies\Company(:producer.default_name)

override @producer.massive: \Andromeda\Companies\Company('Other Company')

@engine.pulsedriver
 = tag: "engines", "space"
 = route: 'GET', '/something/else'

@human.ray: Human('Ray')
 - setAge(23)
 - age: 26
 <- addAlias('Mary')
 
@human.ray
 - setAge(27)
 <- addAlias('Awesome')

==== @human.ray.age === 23, 26

@human.ray
 - age: 27

==== @human.ray.age === 27

/**
 * Auto wiring
 */
using \ContainerAwareTrait 
 - setContainer(@container)

/**
 * Check for interface
 */
implementing \ContainerAwareInterface
 - setContainer(@container)

/**
 * Check for interface
 */
implementing \RoutableInterface
 <= tag: "route"

/**
 * Looping
 */
for class in ['File', 'MySQL', 'MongoDB']
{
	define(class.lower)
}

/***
 * Prefixing
 */
prefix log.
{
	use Logger\(
		Adapter\(
			File, 
			MySQL,
			MongoDB
		),
		Manager
	)

	@file.adapter: File // results in log.file.adapter
	@mysql.adapter: MySQL
	@mongo.adapter: MongoDB
}


when using DBTrait
	- setMysql(@mysql)

when instanceof Controller
	- setContainer(@container)
	=> tags: "controller"

@mysql: factory Service\HydrahonFactory

namespace request
{
	@handler: TiBot\PuppetMaster\RequestHandler(@container)

	namespace handler 
	{
		// Create server handler
		@create_server: TiBot\PuppetMaster\RequestHandlers\CreateServerHandler(@puppet.manager, @puppet.actions)
		// Proxy handler
		@proxy: TiBot\PuppetMaster\RequestHandlers\ProxyHandler(@puppet.manager, @puppet.actions)
	}
}

